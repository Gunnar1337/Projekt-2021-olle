<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UvI/qwOIWJZj/mgAAAAASUVORK5CYII=
</value>
  </data>
</root>